pipeline {
    agent any
    environment {
        MAJOR_VERSION = "1"
        MINOR_VERSION = "1"
        BUILD_VERSION = sh(returnStdout: true, script: 'echo ${BUILD_NUMBER}').trim()
        VERSION = "${MAJOR_VERSION}.${MINOR_VERSION}.${BUILD_VERSION}"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-token')
        DOCKER_HOST = "tcp://docker:2375"
    }
    stages {
        // stage('Build') {
        //     steps {
        //         echo 'building...'
        //         sh 'DOCKER_TLS_VERIFY= docker compose -f DevOps/docker-compose.yml build --no-cache jellyfin > DevOps/logs-build.txt'
        //         archiveArtifacts artifacts: 'DevOps/logs-build.txt', fingerprint: true
        //     }

        //     post {
        //         always{
        //             archiveArtifacts(artifacts: 'DevOps/*.txt', fingerprint: true, followSymlinks: false)
        //         }
        //         success {
        //             echo '   success'
        //         }
        //         failure {
        //             echo '   failure'
        //         }
        //     }
        // }
        // stage('Test') {
        //     steps {
        //         echo 'testing...'
        //         sh 'DOCKER_TLS_VERIFY= docker compose -f DevOps/docker-compose.yml build --no-cache jellyfin-tests > DevOps/logs-test.txt'
        //         archiveArtifacts artifacts: 'DevOps/logs-test.txt', fingerprint: true
        //     }

        //     post {
        //         always{
        //             archiveArtifacts(artifacts: 'DevOps/*.txt', fingerprint: true, followSymlinks: false)
        //         }
        //         success {
        //             echo '   success'
        //         }
        //         failure {
        //             echo '   failure'
        //         }
        //     }
        // }
        stage('Deploy') {
            steps {
                echo 'deploying...'
                sh 'DOCKER_TLS_VERIFY= docker compose -f DevOps/docker-compose.yml build --no-cache jellyfin-deploy > DevOps/logs-deploy.txt'
                sh "DOCKER_TLS_VERIFY=0 docker tag jellyfin-deploy illuminaticat/jellyfin:${VERSION} >> devops/logs-deploy.txt"
                // sh "echo $DOCKERHUB_TOKEN | docker login -u illuminaticat --password-stdin"
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin >> devops/logs-deploy.txt'
                sh "DOCKER_TLS_VERIFY=0 docker push illuminaticat/jellyfin:${VERSION} >> devops/logs-deploy.txt"
                
            }

            post {
                always{
                    archiveArtifacts(artifacts: 'DevOps/*.txt', fingerprint: true, followSymlinks: false)
                }
                success {
                    echo '   success'
                }
                failure {
                    echo '   failure'
                }
            }
        }
        // stage('Publish') {
        //     steps {
        //         echo 'publishing...'
        //         sh 'DOCKER_TLS_VERIFY= docker compose -f DevOps/docker-compose.yml build --no-cache jellyfin-publish > DevOps/logs-publish.txt'
        //         archiveArtifacts artifacts: 'DevOps/logs-publish.txt', fingerprint: true
        //     }

        //     post {
        //         always{
        //             archiveArtifacts(artifacts: 'DevOps/*.txt', fingerprint: true, followSymlinks: false)
        //         }
        //         success {
        //             echo '   success'
        //         }
        //         failure {
        //             echo '   failure'
        //         }
        //     }
        // }
    }
}
pipeline {
    agent any
    environment {
        MAJOR_VERSION = "1"
        MINOR_VERSION = "1"
        BUILD_VERSION = sh(returnStdout: true, script: 'echo ${BUILD_NUMBER}').trim()
        VERSION = "${MAJOR_VERSION}.${MINOR_VERSION}.${BUILD_VERSION}"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    }
    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                sh 'docker-compose -f devops/docker-compose.yml build --no-cache jellyfin > devops/logs-build.txt'
            }
            post {
                always{
                    archiveArtifacts(artifacts: 'devops/*.txt', fingerprint: true, followSymlinks: false)
                }
                success {
                    echo '   Success'
                }
                failure {
                    echo '   Failure'
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                sh 'docker-compose -f devops/docker-compose.yml up jellyfin-tests > devops/logs-test.txt'
            }
            post {
                always{
                    archiveArtifacts(artifacts: 'devops/*.txt', fingerprint: true, followSymlinks: false)
                }
                success {
                    echo '   Success'
                }
                failure {
                    echo '   Failure'
                }
            }
        }
    }
}
